# Generated by Django 4.2.5 on 2023-09-22 05:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Аллерген')),
            ],
            options={
                'verbose_name': 'Аллерген',
                'verbose_name_plural': 'Аллергены',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Категория')),
                ('image', models.ImageField(upload_to='category_img', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Категория блюда',
                'verbose_name_plural': 'Категории блюд',
            },
        ),
        migrations.CreateModel(
            name='Culinary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Тип меню')),
            ],
            options={
                'verbose_name': 'Тип меню',
                'verbose_name_plural': 'Тип меню',
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Блюдо')),
                ('recipe', models.TextField(verbose_name='Рецепт')),
                ('culinary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foods', to='foodplan.culinary', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Ингредиент')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Цена')),
                ('image', models.ImageField(upload_to='imgs/ingredients', verbose_name='Изображение')),
                ('caloric', models.IntegerField(verbose_name='Калорийность')),
                ('allergen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='foodplan.allergen', verbose_name='Аллерген')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='foodplan.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='ImageFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='imgs/foods', verbose_name='Изображение')),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='foodplan.food', verbose_name='Блюдо')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.AddField(
            model_name='food',
            name='ingredient',
            field=models.ManyToManyField(related_name='foods', to='foodplan.ingredient', verbose_name='Ингредиенты'),
        ),
    ]
